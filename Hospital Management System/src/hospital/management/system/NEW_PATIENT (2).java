package hospital.management.system;import javax.swing.*;import java.awt.*;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.sql.ResultSet;import java.util.ArrayList;import java.util.Date;import java.util.HashMap;public class NEW_PATIENT extends JFrame implements ActionListener {    JComboBox<String> comboBox;    ArrayList<JTextField> textFields;    JRadioButton r1, r2;    Choice c1;    JLabel date;    JButton b1, b2;    NEW_PATIENT() {        textFields = new ArrayList<>();        setBounds(300, 150, 850, 550);        getContentPane().setBackground(new Color(90, 156, 163));        setLayout(null);        JPanel panel = new JPanel();        panel.setBounds(5, 5, 840, 540);        panel.setBackground(new Color(90, 156, 163));        panel.setLayout(null);        add(panel);        ImageIcon imageIcon = new ImageIcon(ClassLoader.getSystemResource("icon/patient.png"));        Image image = imageIcon.getImage().getScaledInstance(200, 200, Image.SCALE_DEFAULT);        ImageIcon imageIcon1 = new ImageIcon(image);        JLabel label = new JLabel(imageIcon1);        label.setBounds(550, 150, 200, 200);        panel.add(label);        JLabel labelName = new JLabel("NEW PATIENT FORM");        labelName.setBounds(118, 11, 260, 53);        labelName.setFont(new Font("Tahoma", Font.BOLD, 20));        panel.add(labelName);        String[] labels = {"ID:", "Number:", "Name:", "Gender:", "Disease:", "Room:", "Time:", "Deposite:"};        int yPos = 76;        for (int i = 0; i < labels.length; i++) {            JLabel lbl = new JLabel(labels[i]);            lbl.setBounds(35, yPos, 200, 14);            lbl.setFont(new Font("Tahoma", Font.BOLD, 14));            lbl.setForeground(Color.white);            panel.add(lbl);            if (i == 0) {                comboBox = new JComboBox<>(new String[]{"Aadhar Card", "Voter Id", "Driving License"});                comboBox.setBounds(271, yPos, 150, 20);                comboBox.setBackground(new Color(3, 45, 48));                comboBox.setForeground(Color.white);                comboBox.setFont(new Font("Tahoma", Font.BOLD, 14));                panel.add(comboBox);            } else if (i == 3) {                r1 = new JRadioButton("Male");                r1.setFont(new Font("Tahoma", Font.BOLD, 14));                r1.setForeground(Color.white);                r1.setBackground(new Color(109, 164, 170));                r1.setBounds(271, yPos, 80, 15);                panel.add(r1);                r2 = new JRadioButton("Female");                r2.setFont(new Font("Tahoma", Font.BOLD, 14));                r2.setForeground(Color.white);                r2.setBackground(new Color(109, 164, 170));                r2.setBounds(350, yPos, 80, 15);                panel.add(r2);                ButtonGroup group = new ButtonGroup();                group.add(r1);                group.add(r2);            } else if (i == 5) {                c1 = new Choice();                try {                    conn c = new conn();                    ResultSet resultSet = c.statement.executeQuery("select * from Room");                    while (resultSet.next()) {                        c1.add(resultSet.getString("room_no"));                    }                } catch (Exception e) {                    e.printStackTrace();                }                c1.setBounds(271, yPos, 150, 20);                c1.setFont(new Font("Tahoma", Font.BOLD, 14));                c1.setForeground(Color.WHITE);                c1.setBackground(new Color(3, 45, 48));                panel.add(c1);            } else if (i == 6) {                Date date1 = new Date();                date = new JLabel("" + date1);                date.setBounds(271, yPos, 250, 14);                date.setForeground(Color.white);                date.setFont(new Font("Tahoma", Font.BOLD, 14));                panel.add(date);            } else {                JTextField textField = new JTextField();                textField.setBounds(271, yPos, 150, 20);                textFields.add(textField);                panel.add(textField);            }            yPos += 40;        }        b1 = new JButton("ADD");        b1.setBounds(100, 430, 120, 30);        b1.setForeground(Color.WHITE);        b1.setBackground(Color.black);        b1.addActionListener(this);        panel.add(b1);        b2 = new JButton("Back");        b2.setBounds(260, 430, 120, 30);        b2.setForeground(Color.WHITE);        b2.setBackground(Color.black);        b2.addActionListener(this);        panel.add(b2);//        setUndecorated(true);        setVisible(true);    }    @Override    public void actionPerformed(ActionEvent e) {        if (e.getSource() == b1) {            HashMap<String, String> patientDetails = new HashMap<>();            patientDetails.put("idType", (String) comboBox.getSelectedItem());            patientDetails.put("number", textFields.get(0).getText());            patientDetails.put("name", textFields.get(1).getText());            patientDetails.put("gender", r1.isSelected() ? "Male" : "Female");            patientDetails.put("disease", textFields.get(2).getText());            patientDetails.put("room", c1.getSelectedItem());            patientDetails.put("time", date.getText());            patientDetails.put("deposite", textFields.get(3).getText());            try {                conn c = new conn();                String query = "INSERT INTO Patient_Info VALUES('" +                        patientDetails.get("idType") + "','" +                        patientDetails.get("number") + "','" +                        patientDetails.get("name") + "','" +                        patientDetails.get("gender") + "','" +                        patientDetails.get("disease") + "','" +                        patientDetails.get("room") + "','" +                        patientDetails.get("time") + "','" +                        patientDetails.get("deposite") + "')";                String updateQuery = "UPDATE room SET Availability = 'Occupied' WHERE room_no = " + patientDetails.get("room");                c.statement.executeUpdate(query);                c.statement.executeUpdate(updateQuery);                JOptionPane.showMessageDialog(null, "Patient Added Successfully!");                setVisible(false);            } catch (Exception ex) {                ex.printStackTrace();            }        } else if (e.getSource() == b2) {            setVisible(false);        }    }    public static void main(String[] args) {        new NEW_PATIENT();    }}