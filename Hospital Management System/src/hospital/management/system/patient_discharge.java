package hospital.management.system;import javax.swing.*;import java.awt.*;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.sql.ResultSet;import java.util.ArrayList;import java.util.Date;public class patient_discharge extends JFrame {    patient_discharge() {        // Panel Setup        JPanel panel = new JPanel();        panel.setBounds(5, 5, 790, 390);        panel.setBackground(new Color(90, 156, 163));        panel.setLayout(null);        add(panel);        // Labels and Components Setup        ArrayList<JLabel> labels = new ArrayList<>();        String[] labelTexts = {"CHECK-OUT", "Customer Id", "Room Number", "In Time", "Out Time"};        int[] labelYPos = {20, 80, 130, 180, 230};        int[] labelWidths = {150, 150, 150, 150, 150};        for (int i = 0; i < labelTexts.length; i++) {            JLabel label = new JLabel(labelTexts[i]);            label.setBounds(30, labelYPos[i], labelWidths[i], 20);            label.setFont(new Font("Tahoma", Font.BOLD, 14));            label.setForeground(Color.white);            panel.add(label);            labels.add(label);        }        // Title Label        JLabel titleLabel = labels.get(0);        titleLabel.setFont(new Font("Tahoma", Font.BOLD, 20));        // Choice Component        Choice choice = new Choice();        choice.setBounds(200, 80, 150, 25);        panel.add(choice);        // Labels for Data        JLabel RNo = new JLabel();        RNo.setBounds(200, 130, 150, 20);        RNo.setFont(new Font("Tahoma", Font.BOLD, 14));        RNo.setForeground(Color.white);        panel.add(RNo);        JLabel INTime = new JLabel();        INTime.setBounds(200, 180, 250, 20);        INTime.setFont(new Font("Tahoma", Font.BOLD, 14));        INTime.setForeground(Color.white);        panel.add(INTime);        Date date = new Date();        JLabel OUTTime = new JLabel("" + date);        OUTTime.setBounds(200, 230, 250, 20);        OUTTime.setFont(new Font("Tahoma", Font.BOLD, 14));        OUTTime.setForeground(Color.white);        panel.add(OUTTime);        // Buttons        JButton discharge = new JButton("Discharge");        discharge.setBounds(30, 300, 120, 30);        discharge.setBackground(Color.black);        discharge.setForeground(Color.white);        panel.add(discharge);        discharge.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent e) {                conn c = new conn();                try {                    c.statement.executeUpdate("delete from Patient_Info where number = '" + choice.getSelectedItem() + "'");                    c.statement.executeUpdate("update room set Availability = 'Available' where room_no = '" + RNo.getText() + "'");                    JOptionPane.showMessageDialog(null, "Done");                    setVisible(false);                } catch (Exception E) {                    E.printStackTrace();                }            }        });        JButton Check = new JButton("Check");        Check.setBounds(170, 300, 120, 30);        Check.setBackground(Color.black);        Check.setForeground(Color.white);        panel.add(Check);        Check.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent e) {                conn c = new conn();                try {                    ResultSet resultSet = c.statement.executeQuery("select * from Patient_Info where number = '" + choice.getSelectedItem() + "'");                    while (resultSet.next()) {                        RNo.setText(resultSet.getString("Room_Number"));                        INTime.setText(resultSet.getString("Time"));                    }                } catch (Exception E) {                    E.printStackTrace();                }            }        });        JButton Back = new JButton("Back");        Back.setBounds(300, 300, 120, 30);        Back.setBackground(Color.black);        Back.setForeground(Color.white);        panel.add(Back);        Back.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent e) {                setVisible(false);            }        });        // Populate Choice Component        try {            conn c = new conn();            ResultSet resultSet = c.statement.executeQuery("select * from Patient_Info");            while (resultSet.next()) {                choice.add(resultSet.getString("number"));            }        } catch (Exception e) {            e.printStackTrace();        }//        setUndecorated(true);        setSize(800, 400);        setLayout(null);        setLocation(400, 250);        setVisible(true);    }    public static void main(String[] args) {        new patient_discharge();    }}